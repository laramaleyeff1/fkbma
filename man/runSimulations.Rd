% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_simulation.R
\name{runSimulations}
\alias{runSimulations}
\title{Run Simulations for Adaptive Trial Designs}
\usage{
runSimulations(
  sim_iters,
  data_test,
  data_pool,
  baseline_pattern,
  trt_pattern,
  candsplinevars,
  candbinaryvars,
  candinter,
  true_tailoring_vars,
  interim_n,
  sigma_eps,
  mcmc_specs,
  prior_params,
  trial_specs,
  parallel
)
}
\arguments{
\item{sim_iters}{Integer specifying the number of simulations to run.}

\item{data_test}{A data frame representing the external testing dataset, which includes the
variables defined in `candsplinevars` and `candbinaryvars`, along with a true treatment outcome (`true_trt`).}

\item{data_pool}{A data frame representing the population data available for enrollment in the trial,
which includes variables for outcome (`Y`), treatment group (`trt`), and the candidate spline and binary variables.}

\item{baseline_pattern}{A function describing the baseline outcome pattern for participants based on covariates.}

\item{trt_pattern}{A function describing the treatment effect pattern for participants.}

\item{candsplinevars}{A vector of continuous candidate predictive variables (e.g., age, lab values).}

\item{candbinaryvars}{A vector of binary candidate predictive variables (e.g., gender, disease presence).}

\item{candinter}{A vector specifying which of `candsplinevars` and `candbinaryvars` are tailoring variables.}

\item{true_tailoring_vars}{A vector containing the true tailoring variables used in the simulation.}

\item{interim_n}{A vector specifying the number of participants to enroll at each interim analysis.}

\item{sigma_eps}{Numeric value representing the standard deviation of noise added to the outcome.}

\item{mcmc_specs}{A list of MCMC specifications, including:
- `B`: Number of posterior samples.
- `burnin`: Number of burn-in samples.
- `thin`: The thinning parameter.
- `chains`: The number of MCMC chains.
- `sigma_v`: Proposal variance for "jump" terms.
- `bma`: Boolean indicating whether to include Bayesian model averaging.}

\item{prior_params}{A list of prior distribution parameters, including:
- `lambda_1`: Prior for the number of terms in the model.
- `lambda_2`: Prior for the number of knots in each spline.
- `a_0`, `b_0`: Parameters for inverse gamma prior on individual-level variance.
- `degree`: Degree of B-splines.
- `k_max`: Maximum number of knots for each spline term.
- `w`: Window to propose knot location changes.
- `sigma_B`: Prior Normal variance for model coefficients.}

\item{trial_specs}{A list of trial specifications, including:
- `alpha`: Significance level for hypothesis testing.
- `B_1`, `B_2`: Threshold probabilities for stopping the trial for efficacy and futility.
- `e_1`: Minimum posterior quantile value for enrollment eligibility.
- `pi_var`: Minimum proportion of participants showing efficacy.
- `enrich`: Boolean indicating if adaptive enrichment is used.}

\item{parallel}{Boolean indicating whether to run the simulations in parallel.}
}
\value{
A data frame summarizing the simulated trial results, including:
\describe{
  \item{success}{Boolean indicating whether the trial was successful.}
  \item{final_stop_efficacy}{Boolean if the trial stopped for efficacy at the final interim analysis.}
  \item{final_stop_futility}{Boolean if the trial stopped for futility at the final interim analysis.}
  \item{prop_eff_final}{Proportion of participants in the effective subgroup at the final analysis.}
  \item{final_trial_size}{Total number of participants enrolled by the trial's conclusion.}
  \item{effect_and_subgroup}{Boolean indicating efficacy specific to a subgroup.}
  \item{effect_overall}{Boolean indicating overall efficacy across all participants.}
  \item{subgroup_spec}{Boolean if subgroup-specific analyses were performed.}
  \item{selected_markers}{String listing the tailoring variables selected by the model.}
  \item{correct_marker}{Boolean indicating if the selected tailoring variables match the true tailoring variables.}
  \item{include_correct_marker}{Boolean if the selected tailoring variables include the true tailoring variables.}
  \item{accuracy}{Proportion of correct treatment decisions based on the final trial results.}
  \item{mean_subgroup_ate}{Mean treatment effect in the effective subgroup.}
  \item{mean_subgroup_ate_gr_cutoff}{Proportion of subgroup with treatment effect greater than a specified cutoff.}
  \item{mean_subgroup_ate_l_cutoff}{Proportion of subgroup with treatment effect less than a specified cutoff.}
  \item{time}{Time taken for each iteration.}
}
}
\description{
This function runs simulations for adaptive clinical trial designs using Bayesian methods,
where participants are enrolled and analyzed based on predefined patterns. The simulations
allow for multiple iterations to evaluate the performance of the trial design, using
free-knot B-splines, Bayesian model averaging, and sequential interim analyses.
}
\details{
This function evaluates the performance of an adaptive clinical trial by running multiple
iterations of the trial. It uses a free-knot B-spline model to fit the data, with the option
of Bayesian model averaging. The trial is enriched over time based on interim analyses and
participants are selectively enrolled based on whether they are predicted to benefit from the
treatment.
}
\examples{
sim_iters <- 10
n_pool <- 5000
n_test <- 10000

# Data setup
candsplinevars <- c("X_1", "X_2")
candbinaryvars <- paste0("Z_", 1:5)
candinter <- c(candsplinevars, candbinaryvars)

data_test <- data.frame(X_1 = runif(n_test, 0, 1),
                        X_2 = runif(n_test, 0, 1),
                        Z_1 = rbinom(n_test, 1, 0.35),
                        Z_2 = rbinom(n_test, 1, 0.5),
                        Z_3 = rbinom(n_test, 1, 0.65),
                        Z_4 = rbinom(n_test, 1, 0.2),
                        Z_5 = rbinom(n_test, 1, 0.35))

data_pool <- data.frame(X_1 = runif(n_pool, 0, 1),
                        X_2 = runif(n_pool, 0, 1),
                        Z_1 = rbinom(n_pool, 1, 0.35),
                        Z_2 = rbinom(n_pool, 1, 0.5),
                        Z_3 = rbinom(n_pool, 1, 0.65),
                        Z_4 = rbinom(n_pool, 1, 0.2),
                        Z_5 = rbinom(n_pool, 1, 0.35),
                        trt = rbinom(n_pool, 1, 0.5))

# Generate outcomes
baseline_pattern <- function(X_1, X_2, Z_1, Z_2, Z_3, Z_4, Z_5) {
  2 * Z_1 + 2 * Z_1 * X_1
}
trt_pattern <- function(X_1, X_2, Z_1, Z_2, Z_3, Z_4, Z_5) {
  1 * Z_1 + 0.5 * X_1 * Z_1
}

# MCMC and prior specifications
mcmc_specs <- list(B = 1000, burnin = 1000, thin = 1, chains = 2, sigma_v = 0.1, bma = TRUE)
prior_params <- list(lambda_1 = 0.1, lambda_2 = 1, a_0 = 0.01, b_0 = 0.01, degree = 3,
                     k_max = 9, w = 1, sigma_B = sqrt(20))

# Trial specifications
trial_specs <- list(alpha = 0.05, B_1 = 0.95, B_2 = 0.8, e_1 = 0, b_1 = 0, b_2 = 0,
                    pi_var = 0.1, enrich = TRUE)

# Run simulation
results <- runSimulations(sim_iters, data_test, data_pool, baseline_pattern, trt_pattern,
                          candsplinevars, candbinaryvars, candinter,
                          true_tailoring_vars = c("X_1"), interim_n = c(100, 200, 300),
                          sigma_eps = 0.1, mcmc_specs, prior_params, trial_specs, parallel = FALSE)

}
