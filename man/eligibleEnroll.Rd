% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_full_trial.R
\name{eligibleEnroll}
\alias{eligibleEnroll}
\title{Determines Eligibility of New Participants for Enrollment in a Trial}
\usage{
eligibleEnroll(
  data_new,
  candsplinevars,
  candbinaryvars,
  candinter,
  trial_results,
  alpha,
  e_1
)
}
\arguments{
\item{data_new}{A data frame containing the new participant data, including variables specified by
\code{candsplinevars} and \code{candbinaryvars}.}

\item{candsplinevars}{A vector of names for continuous candidate predictive variables (e.g., age, lab values).}

\item{candbinaryvars}{A vector of names for binary candidate predictive variables (e.g., gender, disease presence).}

\item{candinter}{A vector of candidate tailoring variables, typically a subset of \code{candsplinevars} and \code{candbinaryvars}.}

\item{trial_results}{A list containing trial results, typically generated from MCMC, including the posterior distributions
for treatment effects.}

\item{alpha}{The significance or confidence level for computing posterior quantiles.}

\item{e_1}{The enrollment threshold. Participants whose posterior quantiles exceed this threshold will be considered
eligible for enrollment.}
}
\value{
A list containing:
\itemize{
  \item \code{eligible_data_new}: A data frame containing the data of participants eligible for enrollment.
  \item \code{eligible_idx}: A vector of indices representing eligible participants in \code{data_new}.
}
}
\description{
This function determines the eligibility of new participants for enrollment in a clinical trial
based on their posterior quantiles relative to a threshold. Participants whose posterior quantiles
exceed the specified enrollment threshold are considered eligible.
}
\details{
This function calculates the posterior quantiles of new participants using their data and the trial results.
These quantiles are compared to the enrollment threshold (\code{e_1}). Participants whose quantiles exceed \code{e_1}
are considered eligible for enrollment in the trial.
}
\examples{
# Example usage similar to interim analysis example
candbinaryvars = paste0("Z_",1:5)
candsplinevars = c("X_1")
candinter = c(candsplinevars, candbinaryvars)

n = 1000
data = data.frame(X_1 = runif(n,0,1),
                   Z_1 = rbinom(n,1,0.35),
                   Z_2 = rbinom(n,1,0.5),
                   Z_3 = rbinom(n,1,0.65),
                   Z_4 = rbinom(n,1,0.2),
                   Z_5 = rbinom(n,1,0.35),
                   trt = rbinom(n,1,0.5))

data$Y = 2 * data$Z_1 + 2 * data$Z_1 * data$trt + rnorm(n, 0, 0.1)

n = 500
data_new = data.frame(X_1 = runif(n,0,1),
                      Z_1 = rbinom(n,1,0.35),
                      Z_2 = rbinom(n,1,0.5),
                      Z_3 = rbinom(n,1,0.65),
                      Z_4 = rbinom(n,1,0.2),
                      Z_5 = rbinom(n,1,0.35),
                      trt = rbinom(n,1,0.5))


trial_specs = list(alpha = 0.05,
                   B_1 = 0.95,
                   B_2 = 0.8,
                   e_1 = 0,
                   b_1 = 0,
                   b_2 = 0,
                   pi_var = 0.1,
                   enrich = TRUE)

mcmc_specs = list(B = 1000,
                  burnin = 1000,
                  thin = 1,
                  chains = 2,
                  sigma_v = 0.1,
                  bma = TRUE)

prior_params = list(lambda_1 = 0.1,
                    lambda_2 = 1,
                    a_0 = 0.01,
                    b_0 = 0.01,
                    degree = 3,
                    k_max = 9,
                    w = 1,
                    sigma_B = sqrt(20))

trial_results = rjMCMC(data, candsplinevars, candbinaryvars, candinter, mcmc_specs, prior_params)

eligible_results = eligibleEnroll(data_new, candsplinevars, candbinaryvars, candinter, trial_results, alpha = 0.05, e_1 = 0)

}
