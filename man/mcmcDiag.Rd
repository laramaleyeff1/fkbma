% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc_maleyeff.R
\name{mcmcDiag}
\alias{mcmcDiag}
\title{MCMC Diagnostics for Treatment Effect Posterior Distributions}
\usage{
mcmcDiag(trial_results, chains, ids = NULL)
}
\arguments{
\item{trial_results}{A list containing the output from `rjMCMC`, including:
\describe{
  \item{trt_eff_posterior}{Matrix (rows = iterations, columns = individuals) of posterior treatment effects.}
  \item{inter_trt_param}{Matrix of posterior estimates for intercept and main treatment effect.}
}}

\item{chains}{Integer indicating the number of chains used during MCMC sampling.}

\item{ids}{(Optional) Vector specifying the indices of individuals for plotting treatment effects. If not provided,
8 individuals will be randomly selected.}
}
\value{
A list containing:
\describe{
  \item{Rhat_trt_eff_posterior}{Vector of R-hat values for each individual's treatment effect.}
  \item{Rhat_inter}{R-hat value for the intercept parameter.}
  \item{Rhat_trt}{R-hat value for the main effect of treatment.}
  \item{trt_eff_posterior_plot_df}{Data frame for the treatment effect plot.}
  \item{inter_trt_param_plot_df}{Data frame for the intercept and treatment effect plot.}
}
}
\description{
Perform MCMC diagnostics for treatment effect posterior distributions, intercept, and main treatment effect
using R-hat diagnostics. This function computes the R-hat values to assess the convergence of MCMC chains for
each individual's treatment effect and model parameters. It also generates diagnostic plots showing the
evolution of the posterior distributions across iterations for selected individuals and parameters.
}
\details{
This function calculates R-hat statistics to assess MCMC convergence for both treatment effects and model parameters.
Diagnostic plots are generated to visually inspect the chains across iterations.
}
\examples{
# Example using a dataset and rjMCMC results
n <- 1000
data <- data.frame(
  X_1 = runif(n, 0, 1),
  Z_1 = rbinom(n, 1, 0.35),
  Z_2 = rbinom(n, 1, 0.5),
  trt = rbinom(n, 1, 0.5)
)
data$Y <- 2 * data$Z_1 + 2 * data$Z_1 * data$trt + rnorm(n, 0, 0.1)

candsplinevars <- c("X_1")
candbinaryvars <- paste0("Z_", 1:2)
candinter <- c(candsplinevars, candbinaryvars)

# Simulating trial results using rjMCMC function
mcmc_specs <- list(B = 1000, burnin = 1000, thin = 1, chains = 2, sigma_v = 0.1, bma = TRUE)
prior_params <- list(lambda_1 = 0.1, lambda_2 = 1, a_0 = 0.01, b_0 = 0.01, degree = 3, k_max = 9, w = 1, sigma_B = sqrt(20))

trial_results <- rjMCMC(data, candsplinevars, candbinaryvars, candinter, mcmc_specs, prior_params)

# Performing MCMC diagnostics
mcmcDiag(trial_results, chains = 2)
}
